---
interface Props {
  href: string;
  size?: "xs" | "sm" | "md" | "lg";
  block?: boolean;
  style?: "outline" | "primary" | "hover" | "muted";
  classname?: string;
  [rest: string]: any;
}

const {
  href,
  size = "md",
  block = false,
  style = "primary",
  classname,
  ...rest
} = Astro.props;

const sizes = {
  xs: "",
  sm: "px-3 py-1.5",
  md: "px-4 py-2.5",
  lg: "px-5 py-2.5",
};

const styles = {
  outline: "text-center border outline-2 transition-colors border-amber-700 text-amber-700 hover:border-amber-950 dark:text-amber-600 active:outline dark:hover:bg-neutral-600 dark:hover:border-amber-800 dark:hover:text-amber-300",
  primary: "text-center bg-stone-950 outline-2 dark:bg-gray-100 hover:bg-stone-800 dark:hover:bg-white focus-visible:bg-stone-500 dark:focus-visible:bg-gray-100 text-white dark:text-black border-transparent active:outline shadow-sm",
  muted: "text-sm font-semibold leading-6 text-gray-800 dark:text-gray-100",
  hover: "text-center text-amber-900 hover:text-amber-600 focus:text-amber-600 focus:bg-neutral-200 focus:outline-none focus:shadow-outline hover:bg-neutral-200 dark:hover:bg-neutral-700 dark:focus:bg-neutral-700 dark:focus:text-amber-300 dark:hover:text-amber-300 dark:text-amber-600",
};
---

<a
  href={href}
  class:list={[
    "rounded-md text-sm font-semibold transition focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2",
    sizes[size],
    block && "w-full",
    styles[style],
    classname,
  ]}
  {...rest}
>
  <slot />
</a>